@mixin columns-count($count){
    -webkit-column-count: $count;
    -moz-column-count: $count;
    column-count: $count;
}
@mixin border-radius($radius) {
  -webkit-border-radius: $radius!important;
     -moz-border-radius: $radius!important;
      -ms-border-radius: $radius!important;
          border-radius: $radius!important;
}

@mixin border-right-radius($radius) {
  -webkit-border-top-right-radius: $radius!important;
  -webkit-border-bottom-right-radius: $radius!important;
  -moz-border-top-right-radius: $radius!important;
  -moz-border-bottom-right-radius: $radius!important;
  -ms-border-top-right-radius: $radius!important;
  -ms-border-bottom-right-radius: $radius!important;
          border-top-right-radius: $radius!important;
          border-bottom-right-radius: $radius!important;
}

@mixin opacity($value) {
  -webkit-opacity: $value!important;
     -moz-opacity: $value!important;
      -ms-opacity: $value!important;
          opacity: $value!important;
}

@mixin backface-visibility($value) {
  -webkit-backface-visibility: $value!important;
     -moz-backface-visibility: $value!important;
      -ms-backface-visibility: $value!important;
          backface-visibility: $value!important;
}

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

// FANCY CSS STUFF
@mixin padding-vertical($value) {
  padding-top: $value;
  padding-bottom: $value - 2;
}

@mixin padding-horiz($value) {
  padding-left: $value;
  padding-right: $value;
}

@mixin get-bg-hover($value, $amt) {
  @include transition(background 0.25s ease-out);
  background-color: $value;
  &:hover {
    background-color: lighten($value, $amt);
  }
}

.uppercase-titles {
  letter-spacing: 0.5px;
  text-transform: uppercase;
  line-height: 1.1;
  font-weight: 700;
}

.hide {
  display: none;
}

@mixin clearfix {
  &:after {
    content: ' ';
    display: table;
    clear: both;
  }
}

/*============================================================================
  Dependency-free breakpoint mixin
    - http://blog.grayghostvisuals.com/sass/sass-media-query-mixin/
==============================================================================*/
$small: 750px;
$medium: 970px;
$large: 1170px;
$wide: 1560px;

$min: min-width;
$max: max-width;
@mixin at-query ($constraint, $viewport1, $viewport2:null) {
  @if $constraint == $min {
    @media screen and ($min: $viewport1) {
      @content;
    }
  } @else if $constraint == $max {
    @media screen and ($max: $viewport1) {
      @content;
    }
  } @else {
    @media screen and ($min: $viewport1) and ($max: $viewport2) {
      @content;
    }
  }
}
